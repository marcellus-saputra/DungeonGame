<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize

reticle_width = 0;
reticle_height = 0;
creator = 0;
spell = "";

reticle_grid_x = 0;
reticle_grid_y = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Despawn previous highlight tiles, spawn highlight tiles

instance_destroy(obj_tile_highlight);

for (v = 0; v &lt; reticle_height; v++)
for (h = 0; h &lt; reticle_width; h++)
    {
        var highlight_x = scr_coord_convert(h + reticle_grid_x);
        var highlight_y = scr_coord_convert(v + reticle_grid_y);
        instance_create(highlight_x, highlight_y, obj_tile_highlight);
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Adjust position

var right = keyboard_check(vk_right);
var up = keyboard_check(vk_up);
var left = keyboard_check(vk_left);
var down = keyboard_check(vk_down);

if right    reticle_grid_x += 1;
if up       reticle_grid_y -= 1;
if left     reticle_grid_x -= 1;
if down     reticle_grid_y += 1;


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Control player facing
/*
var reticle_x = scr_coord_convert(reticle_grid_x);
var reticle_y = scr_coord_convert(reticle_grid_y);

reticle_center_x = reticle_x + (reticle_width * 0.5 * TILE_LENGTH);
reticle_center_y = reticle_y + (reticle_height * 0.5 * TILE_LENGTH); */

reticle_center_x = (reticle_grid_x * TILE_LENGTH) + (reticle_width * 0.5 * TILE_LENGTH);
reticle_center_y = (reticle_grid_y * TILE_LENGTH) + (reticle_height * 0.5 * TILE_LENGTH);

var reticle_angle = point_direction(obj_player.x, obj_player.y, reticle_center_x, reticle_center_y);

obj_player.facing = reticle_angle div 45 + 1;



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cast spell

var cast = keyboard_check_pressed(vk_space);

if cast
    {
        instance_destroy(obj_tile_highlight);
        var cast_spell = instance_create(
                            reticle_center_x, 
                            reticle_center_y,
                            spell);
        cast_spell.creator = creator;
        instance_destroy();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
