<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Generate minimap

minimap = ds_grid_create(32, 32);

for (v = 1; v &lt;= 30; v++)
    {
        for (h = 1; h &lt;= 30; h++)
            {
                if obj_dungeon_master.dungeon_map[# h, v] != WALL
                    {
                        if obj_dungeon_master.dungeon_map[# h + 1, v] == WALL
                            {
                                minimap[# h, v] += 1000;
                            }
                        if obj_dungeon_master.dungeon_map[# h, v - 1] == WALL
                            {
                                minimap[# h, v] += 100;
                            }
                        if obj_dungeon_master.dungeon_map[# h - 1, v] == WALL
                            {
                                minimap[# h, v] += 10;
                            }
                        if obj_dungeon_master.dungeon_map[# h, v + 1] == WALL
                            {
                                minimap[# h, v] += 1;
                            }
                    }
            }
    }
    
base_x = 1920 - 16 * 32;
base_y = 64;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Generate visibility map

visibility_map = ds_grid_create(32, 32);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Generate sight map

sight_map = ds_grid_create(32, 32);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update visibility map
        
if obj_dungeon_master.dungeon_room_map[# obj_player.current_grid_xpos, obj_player.current_grid_ypos] == UNOCCUPIED
    {
        var room_base_x = obj_player.current_grid_xpos div 8 * 8;
        var room_base_y = obj_player.current_grid_ypos div 8 * 8;
        ds_grid_set_region(visibility_map, room_base_x, room_base_y, room_base_x + 7, room_base_y + 7, 1);
    }

with obj_player
    {
        var square_x = current_grid_xpos - 1;
        var square_x2 = current_grid_xpos + 1;
        var square_y = current_grid_ypos - 1;
        var square_y2 = current_grid_ypos + 1; 
        ds_grid_set_region(obj_minimap.visibility_map, square_x, square_y, square_x2, square_y2, 1);
    }


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update sight map

ds_grid_clear(sight_map, 0);

if obj_dungeon_master.dungeon_room_map[# obj_player.current_grid_xpos, obj_player.current_grid_ypos] == UNOCCUPIED
    {
        var room_base_x = obj_player.current_grid_xpos div 8 * 8;
        var room_base_y = obj_player.current_grid_ypos div 8 * 8;
        ds_grid_set_region(sight_map, room_base_x, room_base_y, room_base_x + 7, room_base_y + 7, 1);
    }
    
with obj_player
    {
        var square_x = current_grid_xpos - 7;
        var square_x2 = current_grid_xpos + 7;
        var square_y = current_grid_ypos - 4;
        var square_y2 = current_grid_ypos + 4; 
        ds_grid_set_region(obj_minimap.sight_map, square_x, square_y, square_x2, square_y2, 1);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the minimap

for (h = 0; h &lt;= 31; h++)
    {
        for (v = 0; v &lt;= 31; v++)
            {
                var draw_x = base_x + scr_coord_convert(h) / 2;
                var draw_y = base_y + scr_coord_convert(v) / 2;
                if sight_map[# h, v] == 1
                    {
                        if obj_dungeon_master.dungeon_map[# h, v].object_index == obj_enemy_test
                            {
                                draw_sprite(spr_minimap_enemy, image_index, draw_x, draw_y);
                            }
                    }
                if visibility_map[# h, v] == 1
                    {
                        if obj_dungeon_master.dungeon_map[# h, v] == obj_player.id
                            {
                                draw_sprite(spr_minimap_player, image_index, draw_x, draw_y);
                            }
                        if obj_dungeon_master.dungeon_map[# h, v] == obj_stairs.id
                            {
                                draw_sprite(spr_minimap_stairs, image_index, draw_x, draw_y);
                            }
                        if minimap[# h, v] div 1000 == 1
                            {
                                draw_sprite(spr_minimap_line_right, image_index, draw_x, draw_y);
                            }
                        if minimap[# h, v] mod 1000 div 100 == 1
                            {
                                draw_sprite(spr_minimap_line_up, image_index, draw_x, draw_y);
                            }
                        if minimap[# h, v] mod 1000 mod 100 div 10 == 1
                            {
                                draw_sprite(spr_minimap_line_left, image_index, draw_x, draw_y);
                            }
                        if minimap[# h, v] mod 1000 mod 100 mod 10 == 1
                            {
                                draw_sprite(spr_minimap_line_down, image_index, draw_x, draw_y);
                            }
                    }
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
